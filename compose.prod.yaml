version: "3"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend
    expose:
      - "3000"
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${EMAIL}
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
    volumes:
      - uploads:/app/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: frontend
    expose:
      - "80"
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${EMAIL}

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile.prod
    container_name: admin
    expose:
      - "80"
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${EMAIL}

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs
      - /etc/nginx/vhost.d
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
      - admin
    networks:
      - app-network
    restart: unless-stopped

  nginx-proxy-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    depends_on:
      - nginx
    volumes: 
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /etc/nginx/conf.d:/etc/nginx/conf.d
    entrypoint: >
      /usr/local/bin/docker-gen
      -notify-sighup nginx-proxy
      -watch
      -wait 5s:30s
      /etc/docker-gen/templates/nginx.tmpl
      /etc/nginx/conf.d/default.conf
    networks:
      - app-network

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    environment:
      - DEFAULT_EMAIL=${EMAIL}
      - NGINX_PROXY_CONTAINER=nginx
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy-gen
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx
    networks:
      - app-network
    restart: unless-stopped

# FOR RASPBERRY mongodb-raspberrypi4-unofficial-r7.0.14
  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo-data-prod:/data/db
    networks:
      - app-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PW}
    restart: unless-stopped

volumes:
  mongo-data-prod:
  uploads:
  certs:
  conf:
  html:


networks:
  app-network: